{"version":3,"file":"order-status-types.27c4b44e.js","sources":["../../../../src/pages/admin/order-status-types.vue"],"sourcesContent":["<script setup lang=\"tsx\">\r\nimport {Database} from '@/stores';\r\nimport {\r\n  stringColumnPreset,\r\n  AppGrid,\r\n  AppGridConfig,\r\n  stringColumnPresetNoEdit,\r\n  severityColumnPreset,\r\n} from '@/components/grid';\r\nimport {SupabaseService} from '@/services/supabase.service';\r\n\r\ntype OrderStatusType = Database['public']['Tables']['orderStatusType']['Row'];\r\nconst grid = ref(null as null | InstanceType<typeof AppGrid>);\r\nconst supabase = useService(SupabaseService);\r\n\r\nasync function getData() {\r\n  return await supabase.getMany(async x =>\r\n    x.from('orderStatusType').select(),\r\n  );\r\n}\r\n\r\nasync function onRowEditSave(data: OrderStatusType) {\r\n  await supabase.set(async x => x.from('orderStatusType').upsert(data));\r\n  await grid?.value?.refresh();\r\n}\r\n\r\nasync function onRowAdd() {\r\n  await supabase.set(async x =>\r\n    x.from('orderStatusType').upsert({\r\n      name: '',\r\n      description: '',\r\n      severity: 'info',\r\n    }),\r\n  );\r\n  await grid?.value?.refresh();\r\n}\r\n\r\nconst config: AppGridConfig<OrderStatusType> = {\r\n  title: 'Типы статусов заказов',\r\n  getData,\r\n  allowAdd: () => onRowAdd,\r\n  allowEdit: true,\r\n  emits: {\r\n    'row-edit-save': e => onRowEditSave(e.newData),\r\n  },\r\n  labels: {\r\n    id: '#',\r\n    name: 'Имя',\r\n    description: 'Описание',\r\n    severity: 'Важность',\r\n  },\r\n  columns: {\r\n    id: stringColumnPresetNoEdit,\r\n    name: stringColumnPreset,\r\n    description: stringColumnPreset,\r\n    severity: severityColumnPreset([\r\n      {\r\n        value: 'info',\r\n        label: 'info',\r\n        severity: 'info',\r\n      },\r\n      {\r\n        value: 'warning',\r\n        label: 'warning',\r\n        severity: 'warning',\r\n      },\r\n      {\r\n        value: 'danger',\r\n        label: 'danger',\r\n        severity: 'danger',\r\n      },\r\n      {\r\n        value: 'success',\r\n        label: 'success',\r\n        severity: 'success',\r\n      },\r\n    ]),\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <AppGrid\r\n    ref=\"grid\"\r\n    :config=\"config\"\r\n  />\r\n</template>\r\n"],"names":["grid","ref","supabase","useService","SupabaseService","getData","getMany","x","from","select","onRowEditSave","data","set","upsert","value","refresh","onRowAdd","name","description","severity","config","title","allowAdd","allowEdit","emits","e","newData","labels","id","columns","stringColumnPresetNoEdit","stringColumnPreset","severityColumnPreset","label"],"mappings":"0uBAYA,MAAMA,EAAOC,EAAI,IAA2C,EACtDC,EAAWC,EAAWC,CAAe,EAE3C,eAAeC,GAAU,CACvB,OAAO,MAAMH,EAASI,QAAQ,MAAMC,GAClCA,EAAEC,KAAK,iBAAiB,EAAEC,OAAM,CAClC,CACF,CAEA,eAAeC,EAAcC,EAAuB,OAClD,MAAMT,EAASU,IAAI,MAAML,GAAKA,EAAEC,KAAK,iBAAiB,EAAEK,OAAOF,CAAI,CAAC,EACpE,OAAMX,EAAAA,GAAAA,YAAAA,EAAMc,QAANd,YAAAA,EAAae,UACrB,CAEA,eAAeC,GAAW,OACxB,MAAMd,EAASU,IAAI,MAAML,GACvBA,EAAEC,KAAK,iBAAiB,EAAEK,OAAO,CAC/BI,KAAM,GACNC,YAAa,GACbC,SAAU,MACX,CAAA,CACH,EACA,OAAMnB,EAAAA,GAAAA,YAAAA,EAAMc,QAANd,YAAAA,EAAae,UACrB,CAEA,MAAMK,EAAyC,CAC7CC,MAAO,wBACPhB,QAAAA,EACAiB,SAAUA,IAAMN,EAChBO,UAAW,GACXC,MAAO,CACL,gBAAiBC,GAAKf,EAAce,EAAEC,OAAO,CAC9C,EACDC,OAAQ,CACNC,GAAI,IACJX,KAAM,MACNC,YAAa,WACbC,SAAU,UACX,EACDU,QAAS,CACPD,GAAIE,EACJb,KAAMc,EACNb,YAAaa,EACbZ,SAAUa,EAAqB,CAC7B,CACElB,MAAO,OACPmB,MAAO,OACPd,SAAU,MACZ,EACA,CACEL,MAAO,UACPmB,MAAO,UACPd,SAAU,SACZ,EACA,CACEL,MAAO,SACPmB,MAAO,SACPd,SAAU,QACZ,EACA,CACEL,MAAO,UACPmB,MAAO,UACPd,SAAU,SACZ,CAAC,CACF,CACH"}