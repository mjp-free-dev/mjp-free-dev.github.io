{"version":3,"file":"all-order-info.044c0180.js","sources":["../../../../src/components/app/AppOrderPrivateStatusForm.vue","../../../../src/pages/moder/all-order-info.vue"],"sourcesContent":["<template>\r\n  <AppCard\r\n    basis=\"500px\"\r\n    :title=\"'Учёт заказа #' + props.id\"\r\n  >\r\n    <FormKit\r\n      v-if=\"orderSchema && model\"\r\n      ref=\"form\"\r\n      v-model=\"model\"\r\n      type=\"form\"\r\n      :actions=\"false\"\r\n      @submit=\"onValidSubmit\"\r\n    >\r\n      <FormKitSchema :schema=\"orderSchema\" />\r\n      <Button\r\n        v-if=\"!props.readonly\"\r\n        label=\"Обновить\"\r\n        @click=\"() => onSubmit()\"\r\n      />\r\n    </FormKit>\r\n  </AppCard>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport AppCard from '@/components/markup/AppCard.vue';\r\nimport {FormKitNode} from '@formkit/core';\r\nimport {DateTime} from 'luxon';\r\n\r\nconst emit = defineEmits<{\r\n  (event: 'update', data: OrderPrivateStatusUpdateData): void;\r\n}>();\r\n\r\nconst props = defineProps<{\r\n  id: number;\r\n  readonly?: boolean;\r\n  data: OrderPrivateStatusDisplayData;\r\n}>();\r\nconst orderSchema = ref(null as null | any[]);\r\nconst model = ref(null as null | OrderPrivateStatusDisplayData);\r\nonMounted(() => {\r\n  model.value = {\r\n    deliveryDate: undefinedIfNotDate(props.data.deliveryDate) as any,\r\n    shippingDate: undefinedIfNotDate(props.data.shippingDate) as any,\r\n    notes: props.data.notes,\r\n    totalPriceNet: undefinedIfNotFinite(props.data.totalPriceNet),\r\n    totalPriceGross: undefinedIfNotFinite(props.data.totalPriceGross),\r\n  };\r\n\r\n  orderSchema.value = [\r\n    {\r\n      $formkit: 'primeInputNumber',\r\n      name: 'totalPriceNet',\r\n      label: 'Итого цена нетто',\r\n      suffix: ' PLN',\r\n      minFractionDigits: 2,\r\n      maxFractionDigits: 2,\r\n      validation: 'min:0.01|max:1000000000',\r\n      _disabled: true,\r\n    },\r\n    {\r\n      $formkit: 'primeInputNumber',\r\n      name: 'totalPriceGross',\r\n      label: 'Итого цена брутто',\r\n      suffix: ' PLN',\r\n      minFractionDigits: 2,\r\n      maxFractionDigits: 2,\r\n      validation: 'min:0.01|max:1000000000',\r\n      _disabled: true,\r\n    },\r\n    {\r\n      $formkit: 'primeCalendar',\r\n      name: 'deliveryDate',\r\n      label: 'Дата доставки',\r\n      dateFormat: 'yy-mm-dd',\r\n      showButtonBar: true,\r\n      _disabled: props.readonly,\r\n    },\r\n    {\r\n      $formkit: 'primeCalendar',\r\n      name: 'shippingDate',\r\n      label: 'Дата выдачи',\r\n      dateFormat: 'yy-mm-dd',\r\n      showButtonBar: true,\r\n      _disabled: props.readonly,\r\n    },\r\n    {\r\n      $formkit: 'primeTextarea',\r\n      name: 'notes',\r\n      label: 'Заметки',\r\n      rows: '5',\r\n      _disabled: props.readonly,\r\n    },\r\n  ];\r\n});\r\n\r\nconst form = ref(null as null | {node: FormKitNode});\r\n\r\nfunction onSubmit() {\r\n  form.value?.node.submit();\r\n}\r\n\r\nfunction onValidSubmit() {\r\n  if (!model.value) {\r\n    return;\r\n  }\r\n\r\n  const {deliveryDate, shippingDate, notes} = model.value;\r\n\r\n  emit('update', {\r\n    deliveryDate: convertDate(deliveryDate),\r\n    shippingDate: convertDate(shippingDate),\r\n    notes,\r\n  });\r\n}\r\n</script>\r\n\r\n<script lang=\"ts\">\r\nexport interface OrderPrivateStatusUpdateData {\r\n  deliveryDate?: string;\r\n  shippingDate?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface OrderPrivateStatusDisplayData\r\n  extends OrderPrivateStatusUpdateData {\r\n  totalPriceNet?: number;\r\n  totalPriceGross?: number;\r\n}\r\n\r\nfunction undefinedIfNotFinite(num: unknown) {\r\n  if (Number.isFinite(num)) {\r\n    return num as number;\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction undefinedIfNotDate(date: unknown) {\r\n  if (typeof date !== 'string') {\r\n    return undefined;\r\n  }\r\n\r\n  const result = DateTime.fromFormat(date, 'yyyy-MM-dd');\r\n  \r\n  if (result.isValid) {\r\n    return result.toJSDate();\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction convertDate(date: unknown) {\r\n  if (typeof date === 'object' && date instanceof Date) {\r\n    const result = DateTime.fromJSDate(date);\r\n\r\n    if (result.isValid) {\r\n      return result.toFormat('yyyy-MM-dd');\r\n    }\r\n  }\r\n\r\n  if (typeof date === 'string') {\r\n    const result = DateTime.fromFormat('yyyy-MM-dd', date);\r\n\r\n    if (result.isValid) {\r\n      return result.toFormat('yyyy-MM-dd');\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n}\r\n</script>\r\n","<template>\r\n  <AppCardLayout>\r\n    <AppCardGroup>\r\n      <AppProductsGrid\r\n        v-if=\"orderData\"\r\n        :items=\"orderData.products\"\r\n        mode=\"moder\"\r\n        @update=\"onProductsUpdated\"\r\n      />\r\n    </AppCardGroup>\r\n\r\n    <AppCardGroup>\r\n      <OrderFormRo :data=\"orderFormData\" />\r\n    </AppCardGroup>>\r\n\r\n    <AppCardGroup>\r\n      <AppOrderPublicStatusForm\r\n        v-if=\"orderPublicStatusDisplayData\"\r\n        :id=\"orderId\"\r\n        :data=\"orderPublicStatusDisplayData\"\r\n        :readonly=\"false\"\r\n        @update=\"onPublicStatusUpdate\"\r\n      />\r\n    </AppCardGroup>\r\n\r\n    <AppCardGroup>\r\n      <AppOrderPrivateStatusForm\r\n        v-if=\"orderPrivateStatusDisplayData\"\r\n        :id=\"orderId\"\r\n        :data=\"orderPrivateStatusDisplayData\"\r\n        :readonly=\"false\"\r\n        @update=\"onPrivateStatusUpdate\"\r\n      />\r\n    </AppCardGroup>\r\n\r\n    <AppCardGroup>\r\n      <OrderDiscussion\r\n        :order-id=\"orderId\"\r\n        mode=\"moder\"\r\n      />\r\n    </AppCardGroup>\r\n  </AppCardLayout>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport AppCardGroup from '@/components/markup/AppCardGroup.vue';\r\nimport AppCardLayout from '@/components/markup/AppCardLayout.vue';\r\nimport OrderDiscussion from '../user/components/order-discussion.vue';\r\n\r\nimport OrderFormRo, { OrderFormData } from '../user/components/order-form-ro.vue';\r\nimport AppOrderPublicStatusForm, {\r\n  OrderPublicStatusDisplayData,\r\n  OrderPublicStatusUpdateData,\r\n} from '@/components/app/AppOrderPublicStatusForm.vue';\r\nimport AppOrderPrivateStatusForm, {\r\n  OrderPrivateStatusDisplayData,\r\n  OrderPrivateStatusUpdateData,\r\n} from '@/components/app/AppOrderPrivateStatusForm.vue';\r\nAppOrderPrivateStatusForm;\r\nimport {useRoute} from 'vue-router';\r\nimport {ref} from 'vue';\r\nimport {SupabaseService} from '@/services/supabase.service';\r\nimport {\r\n  ModerOrderDisplayItem,\r\n  ModerProduct,\r\n  OrderListService,\r\n} from '@/services/order-list.service';\r\n\r\nconst route = useRoute();\r\nconst queryParams = route.query;\r\nconst orderIdRaw = queryParams['orderId'];\r\nconst orderId = Number(Array.isArray(orderIdRaw) ? orderIdRaw[0] : orderIdRaw);\r\nconst orderData = ref(null as null | ModerOrderDisplayItem);\r\nconst orderFormData = ref(undefined as undefined | OrderFormData);\r\nconst orderPublicStatusDisplayData = ref(\r\n  null as null | OrderPublicStatusDisplayData,\r\n);\r\nconst orderPrivateStatusDisplayData = ref(\r\n  null as null | OrderPrivateStatusDisplayData,\r\n);\r\nconst supabase = useService(SupabaseService);\r\nconst service = useService(OrderListService);\r\n\r\nasync function refresh() {\r\n  orderData.value = null;\r\n  orderPublicStatusDisplayData.value = null;\r\n  orderPrivateStatusDisplayData.value = null;\r\n  const rows = await service.getAllOrders(orderId);\r\n  const value = rows[0];\r\n  orderData.value = value as any;\r\n\r\n  const {\r\n    id,\r\n    vatDocumentRequired,\r\n    shippingMethodName,\r\n    comment,\r\n    orderStatusTypeId,\r\n    productsPriceToPay,\r\n    totalPriceToPay,\r\n    shippingPriceToPay,\r\n    deliveryDate,\r\n    shippingDate,\r\n    notes,\r\n    totalPriceNet,\r\n    totalPriceGross,\r\n  } = value;\r\n\r\n  orderFormData.value = {\r\n    id,\r\n    vatDocumentRequired,\r\n    shippingMethodName,\r\n    comment,\r\n  };\r\n\r\n  orderPublicStatusDisplayData.value = {\r\n    orderStatusTypeId,\r\n    productsPriceToPay,\r\n    totalPriceToPay,\r\n    shippingPriceToPay,\r\n  };\r\n\r\n  orderPrivateStatusDisplayData.value = {\r\n    deliveryDate,\r\n    shippingDate,\r\n    notes,\r\n    totalPriceNet,\r\n    totalPriceGross,\r\n  };\r\n}\r\n\r\nonMounted(refresh);\r\n\r\nasync function onPublicStatusUpdate(data: OrderPublicStatusUpdateData) {\r\n  if (!orderData.value) {\r\n    return;\r\n  }\r\n\r\n  const {id, orderPrivateStatus, orderPublicStatus} = orderData.value;\r\n  const {orderStatusTypeId, shippingPriceToPay} = data;\r\n\r\n  await supabase.set(async x =>\r\n    x.rpc('updateOrderStatus', {\r\n      orderId: id,\r\n      newTypeId: orderStatusTypeId,\r\n      newPublicStatus: {shippingPriceToPay},\r\n      newProductsPublicStatus: (orderPublicStatus as any).productsPublicStatus,\r\n      newPrivateStatus: (orderPrivateStatus as any).privateStatus,\r\n      newProductsPrivateStatus: (orderPrivateStatus as any)\r\n        .productsPrivateStatus,\r\n    }),\r\n  );\r\n\r\n  await refresh();\r\n}\r\n\r\nasync function onPrivateStatusUpdate(data: OrderPrivateStatusUpdateData) {\r\n  if (!orderData.value) {\r\n    return;\r\n  }\r\n\r\n  const {id, orderPrivateStatus, orderPublicStatus, orderStatusTypeId} =\r\n    orderData.value;\r\n\r\n  await supabase.set(async x =>\r\n    x.rpc('updateOrderStatus', {\r\n      orderId: id,\r\n      newTypeId: orderStatusTypeId,\r\n      newPublicStatus: (orderPublicStatus as any).publicStatus,\r\n      newProductsPublicStatus: (orderPublicStatus as any).productsPublicStatus,\r\n      newPrivateStatus: data as any,\r\n      newProductsPrivateStatus: (orderPrivateStatus as any)\r\n        .productsPrivateStatus,\r\n    }),\r\n  );\r\n\r\n  await refresh();\r\n}\r\n\r\nasync function onProductsUpdated(products: ModerProduct[]) {\r\n  if (!orderData.value) {\r\n    return;\r\n  }\r\n\r\n  const {id, orderPrivateStatus, orderPublicStatus, orderStatusTypeId} =\r\n    orderData.value;\r\n\r\n  const newProductsPublicStatus = [] as any[];\r\n  const newProductsPrivateStatus = [] as any[];\r\n\r\n  for (const product of products) {\r\n    const {priceToPay, priceGross, priceMarkup, priceNet} = product;\r\n    newProductsPublicStatus.push({priceToPay});\r\n    newProductsPrivateStatus.push({priceGross, priceMarkup, priceNet});\r\n  }\r\n\r\n  await supabase.set(async x =>\r\n    x.rpc('updateOrderStatus', {\r\n      orderId: id,\r\n      newTypeId: orderStatusTypeId,\r\n      newPublicStatus: (orderPublicStatus as any).publicStatus,\r\n      newProductsPublicStatus,\r\n      newPrivateStatus: (orderPrivateStatus as any).privateStatus,\r\n      newProductsPrivateStatus,\r\n    }),\r\n  );\r\n\r\n  await refresh();\r\n}\r\n</script>\r\n"],"names":["undefinedIfNotFinite","num","undefinedIfNotDate","date","result","DateTime","convertDate","orderSchema","ref","model","onMounted","props","form","onSubmit","_a","onValidSubmit","deliveryDate","shippingDate","notes","emit","orderIdRaw","useRoute","orderId","orderData","orderFormData","orderPublicStatusDisplayData","orderPrivateStatusDisplayData","supabase","useService","SupabaseService","service","OrderListService","refresh","value","id","vatDocumentRequired","shippingMethodName","comment","orderStatusTypeId","productsPriceToPay","totalPriceToPay","shippingPriceToPay","totalPriceNet","totalPriceGross","onPublicStatusUpdate","data","orderPrivateStatus","orderPublicStatus","x","onPrivateStatusUpdate","onProductsUpdated","products","newProductsPublicStatus","newProductsPrivateStatus","product","priceToPay","priceGross","priceMarkup","priceNet"],"mappings":"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"}